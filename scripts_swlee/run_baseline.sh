#sh ./scripts_swlee/run_baseline.sh 210827_DRS_NL_VGG_BASELINE 2 3 13570 0. 0.55
#sh ./scripts_swlee/run-caas.sh 210827_DRS_L_SE_VGG_CAAS_c1 2 3 13570 0.3 0.55

CASE=$1
C1=$2
C2=$3
VISPORT=$4
LMDA=$5
DELTA=$6
MODEL=vgg16


## Training Classifier with DRS-CAAS
CUDA_VISIBLE_DEVICES=${C1},${C2} python scripts/train_cls.py \
    --img_dir=/data_root/WSSS/DRS_log/${CASE}/ \
    --lr=0.001 \
    --epoch=30 \
    --decay_points='10,20' \
    --delta=${DELTA} \
    --logdir=logs/${CASE} \
    --save_folder=checkpoints/${CASE} \
    --model=${MODEL} \
    --show_interval=50 \
    --loss_cls_aware_mode='cls_aware' \
    --lambda_cls_aware=${LMDA}

# Evaluation pseudo segmentation labels generated by the classifier
 CUDA_VISIBLE_DEVICES=${C1} python scripts/test_cls.py \
     --checkpoint=checkpoints/${CASE}/best.pth \
     --img_dir=/data_root/WSSS/DRS_log/${CASE}/ --delta=${DELTA} --model=${MODEL}


# Generating localization maps for the refinement learning
CUDA_VISIBLE_DEVICES=${C1} python scripts/localization_map_gen.py \
    --img_dir=/data_root/WSSS/DRS_log/${CASE}/ \
    --checkpoint=checkpoints/${CASE}/best.pth \
    --delta=${DELTA} --model=${MODEL}


# Refinement learning
CUDA_VISIBLE_DEVICES=${C1},${C2} python scripts/train_refine.py \
    --img_dir=/data_root/WSSS/DRS_log/${CASE}/ \
    --lr=0.0001 \
    --epoch=60 \
    --decay_points='20,40' \
    --logdir=logs/Refine_${CASE} \
    --save_folder=checkpoints/Refine_${CASE} \
    --show_interval=50 \
     --model=${MODEL}

# Evaluation pseudo segmentation labels generated by the refinement newtork
CUDA_VISIBLE_DEVICES=${C1} python scripts/test_refine.py \
    --checkpoint=checkpoints/Refine_${CASE}/best.pth --img_dir=/data_root/WSSS/DRS_log/${CASE}/ --model=${MODEL}

rm -rf /data_root/WSSS/DRS_log/${CASE}/localization_maps

# Pseudo segmentation label generation
CUDA_VISIBLE_DEVICES=${C1} python scripts/pseudo_seg_label_gen.py \
    --img_dir=/data_root/WSSS/DRS_log/${CASE}/ \
    --checkpoint=checkpoints/Refine_${CASE}/best.pth \
    --model=${MODEL}



cd DeepLabV3Plus-Pytorch

ROOT=${IMG_DIR_NAME}
MODEL=deeplabv3plus_resnet101 # deeplabv3plus_resnet101, deeplabv3_resnet101
ITER=20000
BATCH=32
LR=0.05

# training with 2 GPUs
python main.py --data_root ${ROOT} --model ${MODEL} --gpu_id ${C1},${C2} --amp --total_itrs ${ITER} --batch_size ${BATCH} --lr ${LR}  --crop_val --enable_vis --vis_port ${VISPORT} --ckpt ${ROOT}checkpoints/best_${MODEL}_voc_os16.pth
# evalutation with crf
python eval.py --gpu_id ${C1},${C2} --data_root ${ROOT} --model ${MODEL}  --val_batch_size 16  --ckpt ${ROOT}checkpoints/best_${MODEL}_voc_os16.pth --crop_val


